I"“<p>Take a look at below code, my <em>FeedViewController</em>, I use <a href="https://github.com/RxSwiftCommunity/RxDataSources">RxDataSource</a> to bind data to <em>UITableView</em>, Inside the cell, I have button and use a closure callback to handle tap event.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">let</span> <span class="nv">dataSource</span> <span class="o">=</span> <span class="kt">RxTableViewSectionedReloadDataSource</span><span class="o">&lt;</span><span class="kt">SectionOfFeedData</span><span class="o">&gt;</span><span class="p">(</span><span class="nv">configureCell</span><span class="p">:</span> <span class="p">{</span> <span class="p">(</span><span class="n">ds</span><span class="p">,</span> <span class="n">tableView</span><span class="p">,</span> <span class="n">indexPath</span><span class="p">,</span> <span class="n">post</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UITableViewCell</span> <span class="k">in</span>
    <span class="k">let</span> <span class="nv">cell</span><span class="p">:</span> <span class="kt">FeedTableViewCell</span>
    <span class="k">switch</span> <span class="n">post</span><span class="o">.</span><span class="n">postType</span> <span class="p">{</span>
	<span class="k">case</span> <span class="o">.</span><span class="nv">buy</span><span class="p">:</span>
		<span class="n">cell</span> <span class="o">=</span> <span class="n">tableView</span><span class="o">.</span><span class="nf">dequeueReusableCell</span><span class="p">(</span><span class="nv">withIdentifier</span><span class="p">:</span> <span class="s">"FeedCellBuy"</span><span class="p">,</span> <span class="nv">for</span><span class="p">:</span> <span class="n">indexPath</span><span class="p">)</span> <span class="k">as!</span> <span class="kt">FeedTableViewCell</span>
	<span class="k">case</span> <span class="o">.</span><span class="nv">rent</span><span class="p">:</span>
		<span class="n">cell</span> <span class="o">=</span> <span class="n">tableView</span><span class="o">.</span><span class="nf">dequeueReusableCell</span><span class="p">(</span><span class="nv">withIdentifier</span><span class="p">:</span> <span class="s">"FeedCellRent"</span><span class="p">,</span> <span class="nv">for</span><span class="p">:</span> <span class="n">indexPath</span><span class="p">)</span> <span class="k">as!</span> <span class="kt">FeedTableViewCell</span>
    <span class="p">}</span>
    <span class="n">cell</span><span class="o">.</span><span class="nf">configure</span><span class="p">(</span><span class="nv">with</span><span class="p">:</span> <span class="n">post</span><span class="p">)</span>

    <span class="c1">// Event handling, I need to access `self` and don't want retain cycle. Let's use [weak self]!</span>
    <span class="n">cell</span><span class="o">.</span><span class="n">onTap</span> <span class="o">=</span> <span class="p">{</span> <span class="p">[</span><span class="k">weak</span> <span class="k">self</span><span class="p">]</span> <span class="n">post</span> <span class="k">in</span>
        <span class="k">self</span><span class="p">?</span><span class="o">.</span><span class="nf">goToContactAgent</span><span class="p">(</span><span class="nv">post</span><span class="p">:</span> <span class="n">post</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">cell</span>
<span class="p">})</span>

<span class="n">viewModel</span><span class="o">.</span><span class="n">filteredPosts</span>
    <span class="o">.</span><span class="nf">asDriver</span><span class="p">()</span>
    <span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="p">[</span><span class="kt">SectionOfFeedData</span><span class="p">(</span><span class="nv">items</span><span class="p">:</span> <span class="nv">$0</span><span class="p">)]</span> <span class="p">}</span>
    <span class="o">.</span><span class="nf">drive</span><span class="p">(</span><span class="n">tableView</span><span class="o">.</span><span class="n">rx</span><span class="o">.</span><span class="nf">items</span><span class="p">(</span><span class="nv">dataSource</span><span class="p">:</span> <span class="n">dataSource</span><span class="p">))</span>
    <span class="o">.</span><span class="nf">disposed</span><span class="p">(</span><span class="nv">by</span><span class="p">:</span> <span class="n">disposeBag</span><span class="p">)</span>
</code></pre></div></div>

<p>Then I found out my <em>FeedViewController</em> got retain cycle, and after hours debug, comment out codes,â€¦ I found root cause is from the above code.</p>

<p>It looks like the <strong>[weak self]</strong> in <em>onTap</em> block uses the <strong>self</strong> from its context - the <em>configureCell</em> block, which mean itâ€™s a <strong>strong self</strong>. So put <strong>[weak self]</strong> in <strong>configureCell</strong> block instead. And it worked, my <em>ViewController</em> can deinit!!! Thatâ€™s all I need.</p>

<p><img src="https://khanhpham.dev/assets/problem-solved.jpg" alt="Problem Sovled" /></p>

<p><strong>Be more aware to your code, especially memory management.</strong></p>

<footer class="site-footer h-card">
  <data class="u-url" href="/"></data>

  <div class="wrapper">

    <h2 class="footer-heading">Khanh Pham</h2>

    <div class="footer-col-wrapper">
      <div class="footer-col footer-col-1">
        <ul class="contact-list">
          <li class="p-name">Khanh Pham</li><li><a class="u-email" href="mailto:khanh.phamdd@gmail.com">khanh.phamdd@gmail.com</a></li></ul>
      </div>

      <div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/pddkhanh"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">pddkhanh</span></a></li><li><a href="https://www.twitter.com/khanhpham31"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#twitter"></use></svg> <span class="username">khanhpham31</span></a></li></ul>
</div>

      <div class="footer-col footer-col-3">
        <p>Personal blog</p>
      </div>
    </div>

  </div>

</footer>
:ET